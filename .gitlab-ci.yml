variables:
  STORAGE_DRIVER: "vfs"
  BUILDAH_FORMAT: "docker"

stages:
  - security
  - build
  - package
  - deploy

default:
  before_script:
    - export TAG="${CI_COMMIT_TAG:-latest}" && echo $TAG

Nodejs vulnerability scan:
  stage: security
  image: node:lts-slim
  before_script:
    - cd front
    - npm install
  script:
    - npm audit --audit-level=high

Build backend:
  image: gradle:8.7.0-jdk17-alpine
  stage: build
  script:
    - ./gradlew build
  artifacts:
    paths:
      - build/libs/filesox-all.jar

Build frontend:
  image: node:21-alpine3.18
  stage: build
  script:
    - cd front/
    - npm install
    - npm run build
  artifacts:
    when: on_success
    paths:
      - front/dist

Build and push back docker image:
  stage: package
  only:
    - tags
  except:
    - branches
  image:
    name: quay.io/buildah/stable:v1.29.0
  script:
    - buildah bud -f ./docker/back/Dockerfile --cache-from "$REGISTRY_URL/$REGISTRY_APP"-backend --build-arg MODE=prod -t "$REGISTRY_URL/$REGISTRY_APP"-back:$TAG .
    - echo $REGISTRY_PASSWORD | buildah login -u $REGISTRY_USER --password-stdin $REGISTRY_URL
    - buildah push "$REGISTRY_URL/$REGISTRY_APP"-backend:$TAG
  dependencies:
    - Build backend

Build and push front docker image:
  stage: package
  only:
    - tags
  except:
    - branches
  image:
    name: quay.io/buildah/stable:v1.29.0
  script:
    - buildah bud -f ./docker/front/Dockerfile --cache-from "$REGISTRY_URL/$REGISTRY_APP"-frontend --build-arg MODE=prod -t "$REGISTRY_URL/$REGISTRY_APP"-front:$TAG .
    - echo $REGISTRY_PASSWORD | buildah login -u $REGISTRY_USER --password-stdin $REGISTRY_URL
    - buildah push "$REGISTRY_URL/$REGISTRY_APP"-frontend:$TAG
  dependencies:
    - Build frontend

Substitute kubernetes env:
  stage: package
  only:
    - tags
  except:
    - branches
  image:
    name: debian:11
  script:
    - apt-get update && apt-get -y install gettext
    - mkdir -p ./deployments
    - envsubst < ./kubernetes/deployment.yml > ./deployments/deployment.yml
  artifacts:
    name: "deployments:$ARTIFACT_NAME:$CI_JOB_ID"
    when: "on_success"
    expire_in: 1 week
    paths:
